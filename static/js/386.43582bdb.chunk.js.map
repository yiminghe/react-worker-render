{"version":3,"file":"static/js/386.43582bdb.chunk.js","mappings":"iEAEMA,EAA2D,GAE1D,SAASC,EACdC,EACAC,GAEAH,EAAcE,GAAQC,EAGjB,SAASC,EAAiBF,GAC/B,OAAOF,EAAcE,G,sBCVvB,SAASG,KAIT,IA2BIC,EA3BEC,EAAkB,CACtBC,kBAAkB,EAClBC,mBAAoBJ,EACpBK,eAAgBL,EAChBM,mBAAoBN,EACpBO,wBAAyBP,EACzBQ,mBAAoBR,EACpBS,oBAAqBT,EACrBU,IAAK,kBAAMC,KAAKD,OAChBE,kBAAmBZ,EACnBa,iBAAkBb,EAClBc,cAAed,EACfe,iBAAkBf,EAClBgB,qBAAsB,kBAAM,GAC5BC,YAAajB,EACbkB,uBAAwBlB,EACxBmB,iBAAkBnB,EAClBoB,YAAapB,EACbqB,aAAcrB,EACdsB,aAActB,EACduB,wBAAyBvB,EACzBwB,YAAaxB,EACbyB,yBAA0BzB,EAC1B0B,iBAAkB1B,EAClB2B,eAAgB3B,GAId4B,EAAK,EAET,SAASC,IAIP,OAHK5B,IACHA,EAAS6B,GAAAA,CAAW5B,IAEfD,EAGT,MAAe,SACN8B,GACL,IAAMC,EAAYH,IAAYI,kBAAkBL,GAAI,GAAO,GACrDM,EAAQ,CACZC,OADY,SACLC,GACLP,IAAYQ,gBAAgBD,EAAYJ,EAAW,KAAM,OAE3DM,QAJY,WAKVT,IAAYQ,gBAAgB,KAAML,EAAW,QAIjD,OADAE,EAAMC,OAAOJ,GACNG,GAZX,EAAe,WAciB,IAAD,EAC3B,OAAO,EAAAL,KAAYU,eAAZ,oB,6CCzCX,EALyBC,EAAAA,cAA2C,CAClEC,OAAQ,KACRC,IAAK,O,SCVP,SAASC,EAAoBC,GACM,IAAD,EAA3BA,EAASC,mBACZD,EAASC,iBAAmB,CAC1BJ,OAAQG,EACRF,KACE,UAACE,EAASE,eAAV,eAA6CJ,MAAQE,IAG3D,OAAOA,EAASC,iBAGlB,IAAME,EAAgB,CACpBC,iBADoB,SACHC,GACfA,EAAeC,YAAcC,GAG/BC,oBALoB,SAKAR,GAClB,IAAQH,EAAWG,EAASE,QAApBL,OACAY,EAA2BZ,EAA3BY,uBACJA,EAAuBC,IAAIV,GAC7BA,EAASW,eAAiBF,EAAuBG,IAAIZ,IAErDA,EAASW,iBAAmBd,EAAOgB,oBACnCJ,EAAuBK,IAAId,EAAUA,EAASW,gBAC9CX,EAASG,cAAgB,KAI7BY,iBAjBoB,SAiBHf,GACf,IAAKA,EAASG,cAAe,CAC3B,IAAQN,EAAWG,EAASE,QAApBL,OACRG,EAASG,cAAT,UAA4BA,EAAcY,iBAAiBlB,GAA3D,YACEG,EAASW,gBAGb,OAAOX,EAASG,eAGlBa,2BA3BoB,SA4BlBhB,EACAb,GAIA,OAFAa,EAASa,oBAAsB,EAC/Bb,EAASS,uBAAuBQ,SAE9B,SAAC,WAAD,CAA2BC,MAAOnB,EAAoBC,GAAtD,SACGb,MAMT,ICOagC,EAAW,sB,kBC7DXC,EAAyD,GAE/D,SAASC,EAAwBpE,GACtC,GAAImE,EAAiBnE,GACnB,OAAOmE,EAAiBnE,GAFgD,IAKpEqE,EALoE,0IAMxE,WACE,OAAOC,KAAKC,MAAMC,aAPoD,GAKzD7B,EAAAA,WAMX8B,EAASJ,EAGf,OAFAI,EAAEC,YAAc1E,EAChBmE,EAAiBnE,GAAQyE,EAClBA,EAUTE,OAAOC,OAAOT,EAAkB,CAC9BU,IAAKT,EAAwB,OAC7BU,KAAMV,EAAwB,QAC9BW,EAAGX,EAAwB,OC7BtB,IAAMS,EAAb,gMACEG,QAAU,WAAO,IAAD,IACd,eAAKT,OAAMS,eAAX,kBAFJ,uCAIE,WACE,OACE,kCAASV,KAAKC,OAAd,IAAqBS,QAASV,KAAKU,QAAnC,SACGV,KAAKC,MAAMC,gBAPpB,GAAyB7B,EAAAA,WCClB,SAASyB,EAAwBpE,GACtC,GAAImE,EAAiBnE,GACnB,OAAOmE,EAAiBnE,GAFgD,IAKpEqE,EALoE,0IAMxE,WACE,IAAMY,EAAMjF,EACZ,OAAO,SAACiF,GAAD,UAASX,KAAKC,YARiD,GAKzD5B,EAAAA,WAOX8B,EAASJ,EAGf,OAFAI,EAAEC,YAAc1E,EAChBmE,EAAiBnE,GAAQyE,EAClBA,EAGF,IAAMN,EAAyD,CACpEU,IAAAA,GAGFF,OAAOC,OAAOT,EAAkB,CAC9BY,EAAGX,EAAwB,KAC3BU,KAAMV,EAAwB,U,ICZ1Bc,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACJ,WAAYX,GAAa,IAAD,yBACtB,cAAMA,IA0BRY,SAAW,SAACC,GACV,IACMC,EAAU,CACdpB,MAFgBmB,EAAEE,OAAZrB,MAGNsB,IAAK,EAAKC,MAAMD,IAAM,GAExB,EAAKE,SAASJ,GACd,EAAKd,MAAMY,SAASE,IAhCpB,EAAKG,MAAQ,CACXvB,MAAOM,EAAMN,MACbsB,IAAKhB,EAAMgB,KAJS,EA0BvB,OApBA,8BA8BD,WACE,OAAO,kBAAOtB,MAAOK,KAAKkB,MAAMvB,MAAOkB,SAAUb,KAAKa,cACvD,uCA5BD,SACEO,EACAC,GAEA,OACED,EAAUH,MAAQI,EAAUJ,KAC5BG,EAAUzB,QAAU0B,EAAU1B,OAEVyB,EAAUH,IAAKI,EAAUJ,IAAKG,EAAUzB,OACrD,kBACF0B,GADL,IAEE1B,MAAOyB,EAAUzB,UAGHyB,EAAUH,IAAKI,EAAUJ,IACpC,QACR,EA3BGL,CAAcvC,EAAAA,WAAduC,EAQGU,aAAe,CACpBL,IAAK,GAiCT,MAAexF,EAAkB,QAAS,CACxC8F,OADwC,WAEtC,OACE,SAACX,EAAD,CACEjB,MAAOK,KAAKkB,MAAMvB,MAClBsB,IAAKjB,KAAKkB,MAAMD,IAChBJ,SAAUb,KAAKwB,eAAe,iBC/D/B,SAAS3F,KAIT,SAAS4F,EAAcC,GAE5B,IADA,IAAMC,EAAW,GACjB,MAAgBtB,OAAOuB,KAAKF,GAA5B,eAAmC,CAA9B,IAAMG,EAAC,KACJlC,EAAQ+B,EAAKG,GACE,oBAAVlC,EAIPkC,EAAEC,MAAM,cACVH,EAAIE,GAAKlC,EAAMoC,WAAa,IAJ5BJ,EAAIE,GAAKlC,EAOb,OAAOgC,EAGF,SAASK,EAAcC,GAC5B,IACE,OAAOC,KAAKC,MAAMF,GAClB,MAAOnB,GACP,MAAO,I,oBCPLsB,EAA4D,GAE3D,SAASC,EAAkB3G,GAChC,GAAI0G,EAAoB1G,GACtB,OAAO0G,EAAoB1G,GAG7B,IAAM4G,EAAgB1G,EAAiBF,GAOjC6G,EAZ8D,0CA0BlE,WAAYtC,GAAa,IAAD,yBACtB,cAAMA,IAXRb,eAAiB,EAUO,EATxBR,cAAgB,GASQ,EARxBU,oBAAsB,EAQE,EAPxBJ,uBAAyB,IAAIsD,IAOL,EANxBC,aAA2C,GAMnB,EALxBH,cAAgBA,EAKQ,EAJxBI,cAAgBhH,EAIQ,EAFxBiH,eAAsB,GAEE,EADxBlF,GAAK,GACmB,EAexBmF,sBAAwBC,IAAAA,sBAfA,EA8CxBC,iBAAmB,WACjB,OAAO,EAAK7C,OA/CU,EA4DxB8C,WAAalH,EA5DW,EA4ExB2F,eAAiB,SAAC9F,GAChB,IAAQ+G,GAAR,UAAQA,aACAlE,EAAQ,EAAKI,QAAbJ,IACR,OAAIkE,EAAa/G,KAGjB+G,EAAa/G,GAAQ,WAAmB,IAAD,uBAAdsH,EAAc,yBAAdA,EAAc,gBACrC,IAAMC,EAAqB,CACzBC,KAAMtD,EACNuD,YAAa,EAAK1F,GAClB2F,OAAQ1H,EACRsH,KAAAA,GAEFzE,EAAI8E,YAAYJ,IAEjBR,EAAqBV,WAAarG,GAX1B+G,EAAa/G,IA9EtB,EAAKwF,MAAQ,CACXoC,QAAO,UACPC,QAAS,IAEX,EAAKZ,eAAiBtC,OAAOmD,OAAOlB,GACpCjC,OAAOoD,eAAe,EAAKd,eAAgB,QAAS,CAClDtD,IAAK,EAAKyD,mBAEZzC,OAAOoD,eAAe,EAAKd,eAAgB,QAAS,CAClDtD,IAAK,EAAKqE,mBAXU,EA1B0C,4CA6DlE,SAAcC,GACZ3D,KAAKmB,UAAS,YAAkB,IAAfoC,EAAc,EAAdA,QACf,MAAO,CACLA,SAAQ,kBACHA,GACAI,SAlEuD,8BA2ElE,WACE,OAAO3D,KAAKkB,MAAMqC,UA5E8C,wBA8ElE,WACE,OAAOvD,KAAKrB,UA/EoD,+BAkFlE,WAAqB,IAAD,EAClB,UAAA2D,EAAcsB,yBAAd,SAAiCC,KAAK7D,KAAK2C,kBAnFqB,gCAwFlE,SAAmBmB,EAAgBzC,GAAmB,IAAD,EAC3CsB,EAAmB3C,KAAnB2C,eACR,UAAAL,EAAcyB,0BAAd,SAAkCF,KAChClB,EACAmB,EACAzC,EAAUkC,WA7FoD,kCAiGlE,WAAwB,IAAD,EACrB,UAAAjB,EAAc0B,4BAAd,SAAoCH,KAAK7D,KAAK2C,gBAC9C3C,KAAKiE,aAAa1F,IAAI2F,gBAAgBlE,QAnG0B,oBAyHlE,WACE,IAAMpC,EAAU0E,EAAcf,OAAOsC,KAAK,CACxChE,iBAAAA,EACAI,MAAOD,KAAKC,MACZiB,MAAOlB,KAAK0D,mBACZlC,eAAgBxB,KAAKwB,eACrB2C,aAAc9B,IAEhB,OAAOzD,EAAAA,2BAAyCoB,KAAMpC,MAjIU,uCA2ClE,SAAgCwG,EAAhC,GAA4D,IACpD3F,EADmD,EAAjB6E,OAExC1E,EAAAA,oBAAkCH,GAElC,IAAQF,EAAQE,EAASE,QAAjBJ,IACR,IAAKE,EAAShB,GAAI,CAChB,IAAM4G,EAAOzF,EAAAA,iBAA+BH,GAE5C,GADAA,EAAShB,GAAKc,EAAI+F,uBAAuBD,IACpC5F,EAAShB,GACZ,MAAM,IAAI8G,MAAJ,qCAAwCF,IAIhD,OAFA9F,EAAIiG,aAAa/F,GAEV,CAAE8E,QADDhF,EAAIkG,wBAAwBhG,EAAShB,KAAO,IAGtD,MAAO,OA1DyD,GAa1DY,EAAAA,WADJkE,EAWGxD,YAAcC,EA8GvB,IAAMmB,EAAIoC,EAIV,OAFApC,EAAEC,YAAc1E,EAChB0G,EAAoB1G,GAAQyE,EACrBA,EAGTE,OAAOC,OAAOT,EAAkB,CAC9Be,MAAQA,GAAiByB,EAAkB,W,ICjJvCqC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAsBJ,WAAYzE,GAAa,IAAD,yBACtB,cAAMA,IAZRb,eAAiB,EAWO,EAVxBR,cAAgB,IAUQ,EATxBU,oBAAsB,EASE,EARxBJ,uBAAyB,IAAIsD,IAQL,EAPxB8B,uBAAyB,GAOD,EANxBK,6BAA+B,GAMP,EALxBF,wBAA0B,GAKF,EAJxBG,kBAAoB,GAII,EAHxBC,WAAiD,IAAIrC,IAG7B,EAFxBF,cAAgB,KAEQ,EAOxBwC,UAAY,SAAChE,GACX,IAAMmC,EAAqBjB,EAAclB,EAAEiE,MAC3C,GAAI9B,EAAIC,OAAStD,EAAjB,CAIA,IACE6E,EAIExB,EAJFwB,wBACAH,EAGErB,EAHFqB,uBACAM,EAEE3B,EAFF2B,kBACAI,EACE/B,EADF+B,gCAEF,aAAQH,EAAR,EAAQA,WAAYF,EAApB,EAAoBA,6BACpBtE,OAAOC,OACLqE,EACAK,GAEF,cAAmB3E,OAAOuB,KAAKoD,GAA/B,eAAiE,CAA5D,IAAMtJ,EAAI,KACb2G,EAAkB3G,GAAM4F,aACtB0D,EAAgCtJ,GAEpC,EAAK+I,wBAA0BA,EAC/B,EAAKH,uBAAyBA,EAE9B,EAAKrE,MAAM7B,gBAAe,WACnB,EAAK8C,MAAM+D,QACd,EAAK9D,SAAS,CACZ8D,QAAQ,IAGZ,cAAiB5E,OAAOuB,KAAKgD,GAA7B,eAAiD,CAA5C,IAAMnH,EAAE,KACLyD,EAAQ0D,EAAkBnH,GACdoH,EAAWxF,IAAI5B,GACvByH,cAAchE,SAxCN,EAwDxBgE,cAAgBrJ,EAtDd,EAAKoE,MAAMkF,OAAOC,iBAAiB,UAAW,EAAKN,WACnD,EAAK5D,MAAQ,CACX+D,QAAQ,GAJY,EAqEvB,OA/DA,mCAsCD,SAAYhC,GAEVjD,KAAKC,MAAMkF,OAAO9B,YAAYnB,KAAKmD,UAAUpC,MAC9C,0BAED,SAAaqC,GACXtF,KAAK6E,WAAWtF,IAAI+F,EAAU7H,GAAI6H,KACnC,6BACD,SAAgBA,GACdtF,KAAK6E,WAAWU,OAAOD,EAAU7H,MAClC,kCAID,WACEuC,KAAKC,MAAMkF,OAAOK,oBAAoB,UAAWxF,KAAK8E,aACvD,oBAED,WACE,GAAI9E,KAAKkB,MAAM+D,OAAQ,CACrB,IAAMQ,EAAQpD,EAAkBrC,KAAKC,MAAMlC,OAC3C,OAAOa,EAAAA,2BAAyCoB,MAAM,SAACyF,EAAD,KAEtD,OAAO,SAEV,EA3FGf,CACIrG,EAAAA,WA6FVO,EAAAA,iBAA+B8F,GC1G/B,MAAejJ,EAAkB,QAAS,CACxCiK,gBADwC,WAEtC,MAAO,CACL/F,MAAOK,KAAKC,MAAMN,MAClBsB,IAAK,IAGTJ,SAPwC,SAO/BC,GAAS,IAAD,IAEfd,KAAKmB,SAASL,OAAG6E,GAAW,GAC5B,aAAA3F,KAAKC,OAAMY,gBAAX,gBAAsBC,EAAEnB,QAE1BoE,mBAZwC,SAYrBD,EAAgBzC,GAC7BuE,OAAOC,MAAM7F,KAAKC,MAAMN,QAAUiG,OAAOC,MAAM7F,KAAKkB,MAAMvB,QAG1DK,KAAKC,MAAMN,QAAUK,KAAKkB,MAAMvB,OAClCK,KAAKmB,UAAL,kBACKnB,KAAKkB,OADV,IAEEvB,MAAOK,KAAKC,MAAMN,UAIxB4B,OAvBwC,WAwBtC,OAAO,QCfLa,EAA4D,GAE9D0D,EAAM,EAEH,SAASzD,EACd3G,GAEuB,IADvBqK,EACsB,wDACtB,GAAI3D,EAAoB1G,GACtB,OAAO0G,EAAoB1G,GAG7B,IAAM4G,EAAgB1G,EAAiBF,GAOjC6G,EAZgB,0CA8BpB,WAAYtC,GAAa,IAAD,EAgBtB,IAhBsB,gBACtB,cAAMA,IAfRxC,QAcwB,IAbxB2B,eAAiB,EAaO,EAZxBR,cAAgB,GAYQ,EAXxBU,oBAAsB,EAWE,EAVxBJ,uBAAyB,IAAIsD,IAUL,EATxBC,kBASwB,IARxBH,cAAgBA,EAQQ,EAPxBK,oBAOwB,IANxBD,cAAgBhH,EAMQ,EAyCxBwJ,cAAgB,SACdvB,EACAqC,GAEI,IADJC,IACG,yDACEF,IACHE,GAAe,GAEjB,EAAK9E,UAAS,YAAkB,IAAfoC,EAAc,EAAdA,QACX2C,EAAgB,GASpB,OAPEA,EADsB,oBAAbvC,EACEA,EAASJ,GAETI,EAETsC,GACF,EAAKhC,aAAa1F,IAAI2G,eAAtB,UAA0CgB,GAErC,CACL3C,SAAQ,kBACHA,GACA2C,MAGNF,IAjEmB,EAkHxBlD,iBAAmB,WACjB,OAAO,EAAK7C,OAnHU,EAqHxByD,iBAAmB,WACjB,OAAO,EAAKxC,MAAMqC,SAtHI,EAyHxB/B,eAAiB,SAAC9F,GAChB,IAAQ+G,GAAR,UAAQA,aACR,GAAIA,EAAa/G,GACf,OAAO+G,EAAa/G,GAEtB,IAAMiH,EAAiB,EAAKA,eACtBwD,EAAc,WAClBxD,EAAejH,GAAf,MAAAiH,EAAc,YAIhB,OAFAwD,EAAOpE,WAAarG,EACpB+G,EAAa/G,GAAQyK,EACdA,GAlIP,EAAK1I,GAAK,GACV,EAAKkF,eAAiBtC,OAAOmD,OAAOlB,GACpC,EAAKK,eAAexB,SAAW,EAAK+D,cACpC7E,OAAOoD,eAAe,EAAKd,eAAgB,QAAS,CAClDtD,IAAK,EAAKyD,mBAEZzC,OAAOoD,eAAe,EAAKd,eAAgB,QAAS,CAClDtD,IAAK,EAAKqE,mBAEZ,EAAKjB,aAAe,GACpB,EAAKvB,MAAQ,CACXoC,QAAO,UACPC,QAAS,IAEPjB,EAAcoD,gBAAiB,CACjC,IAAMxE,EAAQoB,EAAcoD,gBAAgB7B,KAAK,EAAKlB,gBAClDzB,IACD,EAAKA,MAAgBqC,QAAUrC,GAnBd,SA9BJ,oDAsDpB,SAAsBE,EAAgBgF,GACpC,OAAI9D,EAAcM,uBACTN,EAAcM,sBAAsBiB,KACzC7D,KAAK2C,eACLvB,EACAgF,EAAU7C,aACVoC,KA5Dc,wBAkEpB,SAAWvC,EAAgBJ,GACzB,IAAML,EAAsB3C,KAAK2C,eACjCA,EAAeS,GAAf,MAAAT,GAAc,OAAYK,MApER,wBA0HpB,WACE,OAAOhD,KAAKrB,UA3HM,+BA8HpB,WAAqB,IAAD,EAClB,UAAA2D,EAAcsB,yBAAd,SAAiCC,KAAK7D,KAAK2C,kBA/HzB,gCAkIpB,SAAmBmB,EAAgBzC,GAAiB,IAAD,EACzCsB,EAAmB3C,KAAnB2C,eACR,UAAAL,EAAcyB,0BAAd,SAAkCF,KAChClB,EACAmB,EACAzC,EAAUkC,WAvIM,kCA2IpB,WAAwB,IAAD,EACrB,UAAAjB,EAAc0B,4BAAd,SAAoCH,KAAK7D,KAAK2C,gBAC9C3C,KAAKiE,aAAa1F,IAAI2F,gBAAgBlE,QA7IpB,oBAqKpB,WACE,IAAMpC,EAAU0E,EAAcf,OAAOsC,KAAK,CACxChE,iBAAAA,EACAI,MAAOD,KAAKC,MACZiB,MAAOlB,KAAK0D,mBACZlC,eAAgBxB,KAAKwB,eACrB2C,aAAc9B,IAEhB,OAAOzD,EAAAA,2BAAyCoB,KAAMpC,MA7KpC,uCAkGpB,SAAgCwD,EAAhC,GAAoE,IAC5D3C,EAD2D,EAAjB6E,OAEhD1E,EAAAA,oBAAkCH,GAClC,IAAQF,EAAQE,EAASE,QAAjBJ,IAKR,GAJKE,EAAShB,KACZgB,EAAShB,KAAOqI,EAAM,GACtBvH,EAAIiG,aAAa/F,IAEfA,EAAS6D,cAAc+D,yBAA0B,CACnD,IAAMnF,EAAQzC,EAASiF,mBACjBC,EAAWlF,EAAS6D,cAAc+D,yBACtCjF,EACAF,GAEF,MAAO,CACLqC,SAAQ,kBACHrC,GACAyC,IAIT,MAAO,OAvHW,GAaZtF,EAAAA,WADJkE,EAcGxD,YAAcC,EAdjBuD,EAgBGjB,aAAegB,EAAchB,aAqJtC,IAAMnB,EAAIoC,EAIV,OAFApC,EAAEC,YAAc1E,EAChB0G,EAAoB1G,GAAQyE,EACrBA,EAGTE,OAAOC,OAAOT,EAAkB,CAC9Be,MAAQ0F,GAAuBjE,EAAkB,SAAS,K,IC3LtDqC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAgBJ,WAAYzE,GAAa,IAAD,yBACtB,cAAMA,IAbRb,eAAiB,EAYO,EAXxBR,cAAgB,IAWQ,EAVxBU,oBAAsB,EAUE,EATxBJ,uBAAyB,IAAIsD,IASL,EARxB8B,uBAAiD,GAQzB,EAPxBG,wBAA+C,GAOvB,EANxBG,kBAAyC,GAMjB,EALxB2B,gBAA+B,IAAIC,IAKX,EAJxB3B,WAAiD,IAAIrC,IAI7B,EAHxBiE,WAAY,EAGY,EAFxB9B,6BAAuD,GAE/B,EAIxBG,UAAY,SAAChE,GACX,IAAMmC,EAAqBjB,EAAclB,EAAEiE,MAC3C,GAAI9B,EAAIC,OAAStD,EAAjB,CAIA,IAAQuD,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,OAAQJ,EAASC,EAATD,KACvBsC,EAAY,EAAKT,WAAWxF,IAAI8D,GACtCuD,GAA0B,WACxBpB,EAAUvC,WAAWK,EAAQJ,QAX/B,EAAK/C,MAAMkF,OAAOC,iBAAiB,UAAW,EAAKN,WAF7B,EAkHvB,OA/GA,mCAaD,SAAY7B,GAEVjD,KAAKC,MAAMkF,OAAO9B,YAAYnB,KAAKmD,UAAUpC,MAC9C,+BAED,WACEjD,KAAK4E,kBAAoB,GACzB5E,KAAKuG,gBAAgB7G,QACrBM,KAAKsE,uBAAyB,GAC9BtE,KAAKyE,wBAA0B,KAChC,kCAED,WAAwB,IAAD,OACjBzE,KAAKyG,YAGTzG,KAAKyG,WAAY,EACjBE,QAAQC,UAAUC,MAAK,WACrB,EAAKZ,eACL,EAAKa,oBACL,EAAKL,WAAY,QAEpB,+BAED,WACEzG,KAAK+G,yBACN,kCAED,WACE/G,KAAKC,MAAMkF,OAAOK,oBAAoB,UAAWxF,KAAK8E,aACvD,0BAED,WAWE,IAVA,IACED,EAKE7E,KALF6E,WACAD,EAIE5E,KAJF4E,kBACAH,EAGEzE,KAHFyE,wBACAH,EAEEtE,KAFFsE,uBACAK,EACE3E,KADF2E,6BAGIK,EAA0D,GAEhE,MAAiB3E,OAAOuB,KAAKgD,GAA7B,eAAiD,CAA5C,IAAMnH,EAAE,KACNoH,EAAW1F,IAAI1B,WACXmH,EAAkBnH,GAI7B,cAAiBuJ,MAAMC,KAAKjH,KAAKuG,iBAAjC,eAAmD,CAA9C,IAAM9I,EAAE,KACL6H,EAAYT,EAAWxF,IAAI5B,GACzBiF,EAAkB4C,EAAlB5C,cAER+B,EAAwBhH,GAAM6H,EAAU5B,mBACxCY,EAAuB1F,EAAAA,iBAA+B0G,IAAc7H,EAE/DkH,EAA6BjC,KAChCiC,EAA6BjC,GAC3B9G,EAAiB8G,GAAepB,cAAgB,GAClD0D,EAAgCtC,GAC9BiC,EAA6BjC,IAInC1C,KAAKqD,YAAY,CACfH,KAAMtD,EACN6E,wBAAyBhD,EAAcgD,GACvCH,uBAAAA,EACAM,kBAAmBnD,EAAcmD,GACjCI,gCAAiCvD,EAC/BuD,OAGL,2BACD,SAAcM,EAAkCpE,GAC9C,IAAIlB,KAAKuG,gBAAgBpH,IAAImG,EAAU7H,IAAvC,CAGA,IAAQmH,EAAsB5E,KAAtB4E,kBACF7D,EAAU6D,EAAkBU,EAAU7H,KAAO,GACnD4C,OAAOC,OAAOS,EAASG,GACvB0D,EAAkBU,EAAU7H,IAAMsD,EAClCf,KAAK+G,0BACN,0BACD,SAAazB,GACNtF,KAAK6E,WAAW1F,IAAImG,EAAU7H,KACjCuC,KAAKuG,gBAAgBW,IAAI5B,EAAU7H,IAErCuC,KAAK6E,WAAWtF,IAAI+F,EAAU7H,GAAI6H,KACnC,6BACD,SAAgBA,GACdtF,KAAKuG,gBAAgBhB,OAAOD,EAAU7H,IACtCuC,KAAK6E,WAAWU,OAAOD,EAAU7H,MAClC,oBAED,WACE,IAAMgI,EAAQpD,EAAkBrC,KAAKC,MAAMlC,OAC3C,OAAOa,EAAAA,2BAAyCoB,MAAM,SAACyF,EAAD,SACvD,EAlIGf,CACIrG,EAAAA,WAoIVO,EAAAA,iBAA+B8F,GAE/B,QCvJA,OACEgB,gBADa,WAEX,MAAO,CACLyB,MAAO,IAGXtG,SANa,SAMJlB,GACP,IAAMyH,EAAIC,SAAS1H,GACF,kBAANyH,GAAmBvB,MAAMuB,IAClCpH,KAAKmB,SAAS,CACZgG,MAAOC,KAIb1G,QAda,WAeXV,KAAKmB,SAAS,CACZgG,MAAOnH,KAAKkB,MAAMiG,MAAQ,MChBhC,OACE7F,aAAc,CACZgG,UAAW,GAEb5B,gBAJa,WAKX,MAAO,CACL6B,MAAO,sBACPhL,IAAKyD,KAAKC,MAAMqH,YAGpB1E,sBAVa,SAUSxB,EAAgBgF,GACpC,OAAOA,EAAU7J,MAAQyD,KAAKkB,MAAM3E,KAEtCiL,QAba,WAcXxH,KAAKmB,SAAS,CACZ5E,IAAKC,KAAKD,UCPhBkL,EAFc,OAEd,kBACKC,GADL,IAEEnG,OCVa,WACb,MAAgCvB,KAAKH,iBAA7BU,EAAR,EAAQA,IAAKK,EAAb,EAAaA,MAAOJ,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,EACpBkH,EAAQ3H,KAAKmE,aAAa,SAChC,OACE,iCACE,SAACwD,EAAD,KACA,UAACpH,EAAD,0BACe,KACb,SAACK,EAAD,CACEC,SAAUb,KAAKwB,eAAe,YAC9B7B,MAAOK,KAAKkB,MAAMiG,YAGtB,UAAC5G,EAAD,CACEqH,MAAO,CACLC,OAAQ,gBACRC,OAAQ,GACRC,QAAS,GACTC,WAAY,QAEdtH,QAASV,KAAKwB,eAAe,WAP/B,iCASuBxB,KAAKkB,MAAMiG,UAElC,SAAC3G,EAAD,CACEyH,IAAI,aACJC,KAAK,gGAEP,SAAC3H,EAAD,WACE,SAACE,EAAD,CACE0H,UAAU,qBACVD,KAAK,kDACL,cAAY,oBACZX,MAAM,oBAJR,wCDhBRE,EAA8B,SAA9B,kBACKW,GADL,IAEE7G,OEfa,WACb,IAAQhB,EAAQP,KAAKH,iBAAbU,IACR,OACE,UAACA,EAAD,CACEqH,MAAO,CACLC,OAAQ,gBACRE,QAAS,GACTD,OAAQ,GACRE,WAAY,QAEdtH,QAASV,KAAKwB,eAAe,WAP/B,UASGxB,KAAKkB,MAAMqG,MATd,IASsBvH,KAAKkB,MAAM3E,WCJ9B,YAMH,IALF4I,EAKC,EALDA,OACApH,EAIC,EAJDA,MAKA2I,GAAkB,SAAC,EAAD,CAAKvB,OAAQA,EAAQpH,MAAOA,KHGhD0J,CAAsB,CACpBtC,OAAQkD,KACRtK,MAdY,UILVuK,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB7C,IAAjB8C,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,IAOV,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,QAIfH,EAAoBM,EAAID,EAGxBL,EAAoBO,EAAI,WAGvB,IAAIC,EAAsBR,EAAoBS,OAAErD,EAAW,CAAC,MAAM,WAAa,OAAO4C,EAAoB,QAE1G,OADAQ,EAAsBR,EAAoBS,EAAED,I,WChC7C,IAAIE,EAAW,GACfV,EAAoBS,EAAI,SAASE,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,EAAAA,EACnB,IAASC,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IAAK,CACrCL,EAAWF,EAASO,GAAG,GACvBJ,EAAKH,EAASO,GAAG,GACjBH,EAAWJ,EAASO,GAAG,GAE3B,IAJA,IAGIE,GAAY,EACPC,EAAI,EAAGA,EAAIR,EAASM,OAAQE,MACpB,EAAXN,GAAsBC,GAAgBD,IAAahJ,OAAOuB,KAAK2G,EAAoBS,GAAGY,OAAM,SAASC,GAAO,OAAOtB,EAAoBS,EAAEa,GAAKV,EAASQ,OAC3JR,EAASW,OAAOH,IAAK,IAErBD,GAAY,EACTL,EAAWC,IAAcA,EAAeD,IAG7C,GAAGK,EAAW,CACbT,EAASa,OAAON,IAAK,GACrB,IAAIO,EAAIX,SACEzD,IAANoE,IAAiBb,EAASa,IAGhC,OAAOb,EAzBNG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIP,EAASQ,OAAQD,EAAI,GAAKP,EAASO,EAAI,GAAG,GAAKH,EAAUG,IAAKP,EAASO,GAAKP,EAASO,EAAI,GACrGP,EAASO,GAAK,CAACL,EAAUC,EAAIC,I,GCJ/Bd,EAAoBnB,EAAI,SAASuB,GAChC,IAAIqB,EAASrB,GAAUA,EAAOsB,WAC7B,WAAa,OAAOtB,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADAJ,EAAoB2B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRzB,EAAoB2B,EAAI,SAASxB,EAAS0B,GACzC,IAAI,IAAIP,KAAOO,EACX7B,EAAoB8B,EAAED,EAAYP,KAAStB,EAAoB8B,EAAE3B,EAASmB,IAC5ExJ,OAAOoD,eAAeiF,EAASmB,EAAK,CAAES,YAAY,EAAMjL,IAAK+K,EAAWP,MCJ3EtB,EAAoBgC,EAAI,GAGxBhC,EAAoBzH,EAAI,SAAS0J,GAChC,OAAO7D,QAAQ8D,IAAIpK,OAAOuB,KAAK2G,EAAoBgC,GAAGG,QAAO,SAASC,EAAUd,GAE/E,OADAtB,EAAoBgC,EAAEV,GAAKW,EAASG,GAC7BA,IACL,MCNJpC,EAAoBqC,EAAI,SAASJ,GAEhC,MAAO,aAAeA,EAAf,sBCFRjC,EAAoBsC,SAAW,SAASL,KCDxCjC,EAAoB8B,EAAI,SAASS,EAAKC,GAAQ,OAAO1K,OAAO2K,UAAUC,eAAepH,KAAKiH,EAAKC,ICA/FxC,EAAoB2C,EAAI,wB,WCIxB,IAAIC,EAAkB,CACrB,IAAK,GAkBN5C,EAAoBgC,EAAEf,EAAI,SAASgB,EAASG,GAEvCQ,EAAgBX,IAElBY,cAAc7C,EAAoB2C,EAAI3C,EAAoBqC,EAAEJ,KAK/D,IAAIa,EAAqBhD,KAA0B,oBAAIA,KAA0B,qBAAK,GAClFiD,EAA6BD,EAAmBE,KAAKC,KAAKH,GAC9DA,EAAmBE,KAzBA,SAASxG,GAC3B,IAAIoE,EAAWpE,EAAK,GAChB0G,EAAc1G,EAAK,GACnB2G,EAAU3G,EAAK,GACnB,IAAI,IAAIyD,KAAYiD,EAChBlD,EAAoB8B,EAAEoB,EAAajD,KACrCD,EAAoBM,EAAEL,GAAYiD,EAAYjD,IAIhD,IADGkD,GAASA,EAAQnD,GACdY,EAASM,QACd0B,EAAgBhC,EAASwC,OAAS,EACnCL,EAA2BvG,I,cCrB5B,IAAI6G,EAAOrD,EAAoBO,EAC/BP,EAAoBO,EAAI,WACvB,OAAOP,EAAoBzH,EAAE,KAAK+F,KAAK+E,I,GCDdrD,EAAoBO,I","sources":["../../src/common/register.tsx","../../src/worker/noopRender.tsx","../../src/common/ComponentContext.tsx","../../src/common/componentPath.tsx","../../src/common/types.ts","../../src/worker/nativeComponent.tsx","../../src/render/nativeComponents/Div.tsx","../../src/render/nativeComponent.tsx","../../src/render/nativeComponents/Input.tsx","../../src/common/utils.ts","../../src/render/getComponentClass.tsx","../../src/render/App.tsx","../../src/worker/nativeComponents/Input.tsx","../../src/worker/getComponentClass.tsx","../../src/worker/App.tsx","app/lifecycle.ts","title/lifecycle.ts","worker.ts","app/render.tsx","title/render.tsx","../../src/worker/index.tsx","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import type { WorkerRenderComponentSpec } from './types';\n\nconst componentMaps: Record<string, WorkerRenderComponentSpec> = {};\n\nexport function registerComponent(\n  name: string,\n  desc: WorkerRenderComponentSpec,\n) {\n  componentMaps[name] = desc;\n}\n\nexport function getComponentDesc(name: string) {\n  return componentMaps[name];\n}\n","import Reconciler from 'react-reconciler';\n\nfunction noop() {\n  return;\n}\n\nconst HostConfig: any = {\n  supportsMutation: true,\n  appendInitialChild: noop,\n  createInstance: noop,\n  createTextInstance: noop,\n  finalizeInitialChildren: noop,\n  getRootHostContext: noop,\n  getChildHostContext: noop,\n  now: () => Date.now(),\n  getPublicInstance: noop,\n  prepareForCommit: noop,\n  prepareUpdate: noop,\n  resetAfterCommit: noop,\n  shouldSetTextContent: () => true,\n  appendChild: noop,\n  appendChildToContainer: noop,\n  commitTextUpdate: noop,\n  commitMount: noop,\n  commitUpdate: noop,\n  insertBefore: noop,\n  insertInContainerBefore: noop,\n  removeChild: noop,\n  removeChildFromContainer: noop,\n  resetTextContent: noop,\n  clearContainer: noop,\n};\n\nlet Render: any;\nlet id = 0;\n\nfunction getRender() {\n  if (!Render) {\n    Render = Reconciler(HostConfig);\n  }\n  return Render;\n}\n\nexport default {\n  create(element: React.ReactNode) {\n    const container = getRender().createContainer(++id, false, false);\n    const entry = {\n      update(newElement: React.ReactNode) {\n        getRender().updateContainer(newElement, container, null, null);\n      },\n      unmount() {\n        getRender().updateContainer(null, container, null);\n      },\n    };\n    entry.update(element);\n    return entry;\n  },\n  batchedUpdates(...args: any) {\n    return getRender().batchedUpdates(...args);\n  },\n};\n","import React from 'react';\nimport type {\n  AppComponent,\n  ComponentPathMeta,\n  WorkerRenderComponent,\n} from './types';\n\nexport type ComponentContextValue = {\n  parent: ComponentPathMeta;\n  app: AppComponent;\n};\n\nconst ComponentContext = React.createContext<ComponentContextValue>({\n  parent: null!,\n  app: null!,\n});\n\nexport default ComponentContext;\n","import ComponentContext, { ComponentContextValue } from './ComponentContext';\nimport React from 'react';\nimport { ComponentPathMeta } from './types';\n\nfunction getComponentContext(instance: ComponentPathMeta) {\n  if (!instance.componentContext) {\n    instance.componentContext = {\n      parent: instance,\n      app:\n        (instance.context as ComponentContextValue)?.app || (instance as any),\n    };\n  }\n  return instance.componentContext;\n}\n\nconst componentPath = {\n  classWithContext(ComponentClass: React.ComponentClass) {\n    ComponentClass.contextType = ComponentContext;\n  },\n\n  updateComponentPath(instance: ComponentPathMeta) {\n    const { parent } = instance.context as ComponentContextValue;\n    const { componentChildIndexMap } = parent;\n    if (componentChildIndexMap.has(instance)) {\n      instance.componentIndex = componentChildIndexMap.get(instance)!;\n    } else {\n      instance.componentIndex = ++parent.componentChildIndex;\n      componentChildIndexMap.set(instance, instance.componentIndex);\n      instance.componentPath = '';\n    }\n  },\n\n  getComponentPath(instance: ComponentPathMeta) {\n    if (!instance.componentPath) {\n      const { parent } = instance.context as ComponentContextValue;\n      instance.componentPath = `${componentPath.getComponentPath(parent)}-${\n        instance.componentIndex\n      }`;\n    }\n    return instance.componentPath;\n  },\n\n  renderWithComponentContext(\n    instance: ComponentPathMeta,\n    element: React.ReactNode,\n  ) {\n    instance.componentChildIndex = 0;\n    instance.componentChildIndexMap.clear();\n    return (\n      <ComponentContext.Provider value={getComponentContext(instance)}>\n        {element}\n      </ComponentContext.Provider>\n    );\n  },\n};\n\nexport default componentPath;\n","import React from 'react';\nimport type { ComponentContextValue } from './ComponentContext';\n\nexport interface ComponentPathMeta<P = any, S = any>\n  extends React.Component<P, S> {\n  componentContext?: ComponentContextValue;\n  componentChildIndex: number;\n  componentChildIndexMap: Map<ComponentPathMeta, number>;\n  componentIndex: number;\n  componentPath: string;\n}\n\nexport interface WorkerRenderComponent<P = any, S = any>\n  extends ComponentPathMeta<P, S> {\n  id: string;\n  componentName: string;\n  setStateState(state: any): void;\n  getInstanceState(): any;\n  getInstanceProps(): any;\n  componentSpec: WorkerRenderComponentSpec;\n  callMethod(method: string, args: any[]): void;\n}\nexport type ComponentPath = string;\nexport type ComponentId = string;\n\nexport interface AppComponent<P = any, S = any>\n  extends ComponentPathMeta<P, S> {\n  postMessage(msg: any): void;\n  componentNameDefaultPropsMap: Record<string, string>;\n  newComponentsPathIdMap: Record<ComponentPath, ComponentId>;\n  newComponentsIdStateMap: Record<ComponentId, any>;\n  addComponent(component: WorkerRenderComponent): void;\n  setStateState(component: WorkerRenderComponent, state: any): void;\n  removeComponent(component: WorkerRenderComponent): void;\n}\n\nexport interface WorkerRenderComponentSpec\n  extends React.ComponentLifecycle<any, any>,\n    React.StaticLifecycle<any, any> {\n  getInitialState?: () => any;\n  defaultProps?: any;\n  render: (this: {\n    nativeComponents: Record<string, React.ComponentClass>;\n    props: any;\n    state: any;\n    getComponent: (name: string) => React.ComponentClass;\n    getEventHandle: (name: string) => any;\n  }) => React.ReactNode;\n  [k: string]: any;\n}\n\nexport interface WorkerLike {\n  postMessage(msg: string): void;\n  addEventListener: (\n    type: 'message',\n    fn: (e: { data: string }) => void,\n  ) => void;\n  removeEventListener: (\n    type: 'message',\n    fn: (e: { data: string }) => void,\n  ) => void;\n}\n\nexport const MSG_TYPE = 'react-worker-render';\nexport interface FromWorkerMsg {\n  type: typeof MSG_TYPE;\n  newComponentNameDefaultPropsMap: Record<string, string>;\n  pendingIdStateMap: Record<string, string>;\n  newComponentsPathIdMap: Record<string, string>;\n  newComponentsIdStateMap: Record<string, string>;\n}\n\nexport interface FromRenderMsg {\n  type: typeof MSG_TYPE;\n  componentId: string;\n  method: string;\n  args: any[];\n}\n","import React from 'react';\n\nexport const nativeComponents: Record<string, React.ComponentClass> = {};\n\nexport function getNativeComponentClass(name: string): React.ComponentClass {\n  if (nativeComponents[name]) {\n    return nativeComponents[name];\n  }\n\n  class CC extends React.Component<any> {\n    render() {\n      return this.props.children;\n    }\n  }\n\n  const C: any = CC;\n  C.displayName = name;\n  nativeComponents[name] = C;\n  return C;\n}\n\nexport function registerNativeComponent(\n  cls: string,\n  Cls: React.ComponentClass,\n) {\n  nativeComponents[cls] = Cls;\n}\n\nObject.assign(nativeComponents, {\n  Div: getNativeComponentClass('div'),\n  Link: getNativeComponentClass('link'),\n  A: getNativeComponentClass('a'),\n});\n","import React from 'react';\n\nexport class Div extends React.Component<any> {\n  onClick = () => {\n    this.props.onClick?.();\n  };\n  render() {\n    return (\n      <div {...this.props} onClick={this.onClick}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Div } from './nativeComponents/Div';\n\nexport function getNativeComponentClass(name: string): React.ComponentClass {\n  if (nativeComponents[name]) {\n    return nativeComponents[name];\n  }\n\n  class CC extends React.Component<any> {\n    render() {\n      const Tag = name;\n      return <Tag {...this.props}></Tag>;\n    }\n  }\n\n  const C: any = CC;\n  C.displayName = name;\n  nativeComponents[name] = C;\n  return C;\n}\n\nexport const nativeComponents: Record<string, React.ComponentClass> = {\n  Div,\n};\n\nObject.assign(nativeComponents, {\n  A: getNativeComponentClass('a'),\n  Link: getNativeComponentClass('link'),\n});\n\nexport function registerNativeComponent(\n  cls: string,\n  Cls: React.ComponentClass,\n) {\n  nativeComponents[cls] = Cls;\n}\n","import { registerComponent } from '../../worker';\nimport React from 'react';\nimport { log } from '../../common/log';\n\ninterface InputProps {\n  value: string;\n  seq: number;\n  onChange: Function;\n}\n\ninterface InputState {\n  value: string;\n  seq: number;\n}\n\nclass Input extends React.Component<InputProps, InputState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      value: props.value,\n      seq: props.seq,\n    };\n  }\n  static defaultProps = {\n    seq: 1,\n  };\n  static getDerivedStateFromProps(\n    nextProps: InputProps,\n    prevState: InputState,\n  ) {\n    if (\n      nextProps.seq === prevState.seq &&\n      nextProps.value !== prevState.value\n    ) {\n      log('accept input', nextProps.seq, prevState.seq, nextProps.value);\n      return {\n        ...prevState,\n        value: nextProps.value,\n      };\n    }\n    log('skip input', nextProps.seq, prevState.seq);\n    return {};\n  }\n  onChange = (e: any) => {\n    const { value } = e.target;\n    const current = {\n      value,\n      seq: this.state.seq + 1,\n    };\n    this.setState(current);\n    this.props.onChange(current);\n  };\n  render() {\n    return <input value={this.state.value} onChange={this.onChange} />;\n  }\n}\n\nexport default registerComponent('input', {\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        seq={this.state.seq}\n        onChange={this.getEventHandle('onChange')}\n      />\n    );\n  },\n});\n","export function noop() {\n  return;\n}\n\nexport function cleanFuncJson(json: any) {\n  const ret: any = {};\n  for (const k of Object.keys(json)) {\n    const value = json[k];\n    if (typeof value !== 'function') {\n      ret[k] = value;\n      continue;\n    }\n    if (k.match(/^on[A-z]/)) {\n      ret[k] = value.handleName + '';\n    }\n  }\n  return ret;\n}\n\nexport function safeJsonParse(str: string) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return {};\n  }\n}\n","import React from 'react';\nimport { getComponentDesc } from '../common/register';\nimport {\n  FromRenderMsg,\n  MSG_TYPE,\n  WorkerRenderComponent,\n} from '../common/types';\nimport { nativeComponents } from './nativeComponent';\nimport componentPath from '../common/componentPath';\nimport ComponentContext, {\n  ComponentContextValue,\n} from '../common/ComponentContext';\nimport Input from './nativeComponents/Input';\nimport { noop } from '../common/utils';\nimport PureRender from 'react-addons-pure-render-mixin';\n\nconst componentClassCache: Record<string, React.ComponentClass> = {};\n\nexport function getComponentClass(name: string): React.ComponentClass {\n  if (componentClassCache[name]) {\n    return componentClassCache[name];\n  }\n\n  const componentSpec = getComponentDesc(name);\n\n  interface State {\n    __state: any;\n    __self: Component;\n  }\n\n  class Component\n    extends React.Component<any, State>\n    implements WorkerRenderComponent\n  {\n    componentIndex = 0;\n    componentPath = '';\n    componentChildIndex = 0;\n    componentChildIndexMap = new Map();\n    eventHandles: Record<string, () => void> = {};\n    componentSpec = componentSpec;\n    componentName = name;\n    static contextType = ComponentContext;\n    publicInstance: any = {};\n    id = '';\n    constructor(props: any) {\n      super(props);\n      this.state = {\n        __self: this,\n        __state: {},\n      };\n      this.publicInstance = Object.create(componentSpec);\n      Object.defineProperty(this.publicInstance, 'props', {\n        get: this.getInstanceProps,\n      });\n      Object.defineProperty(this.publicInstance, 'state', {\n        get: this.getInstanceState,\n      });\n    }\n\n    shouldComponentUpdate = PureRender.shouldComponentUpdate;\n\n    static getDerivedStateFromProps(_: any, { __self }: State) {\n      const instance: Component = __self;\n      componentPath.updateComponentPath(instance);\n      let state;\n      const { app } = instance.context as ComponentContextValue;\n      if (!instance.id) {\n        const path = componentPath.getComponentPath(instance);\n        instance.id = app.newComponentsPathIdMap[path];\n        if (!instance.id) {\n          throw new Error(`Can not find id from path: ${path}`);\n        }\n        app.addComponent(instance);\n        state = app.newComponentsIdStateMap[instance.id] || {};\n        return { __state: state };\n      }\n      return {};\n    }\n\n    setStateState(newState: any) {\n      this.setState(({ __state }) => {\n        return {\n          __state: {\n            ...__state,\n            ...newState,\n          },\n        };\n      });\n    }\n\n    getInstanceProps = () => {\n      return this.props;\n    };\n    getInstanceState() {\n      return this.state.__state;\n    }\n    getContext() {\n      return this.context as ComponentContextValue;\n    }\n\n    componentDidMount() {\n      componentSpec.componentDidMount?.call(this.publicInstance);\n    }\n\n    callMethod = noop;\n\n    componentDidUpdate(prevProps: any, prevState: State) {\n      const { publicInstance } = this;\n      componentSpec.componentDidUpdate?.call(\n        publicInstance,\n        prevProps,\n        prevState.__state,\n      );\n    }\n\n    componentWillUnmount() {\n      componentSpec.componentWillUnmount?.call(this.publicInstance);\n      this.getContext().app.removeComponent(this);\n    }\n\n    getEventHandle = (name: string) => {\n      const { eventHandles } = this;\n      const { app } = this.context as ComponentContextValue;\n      if (eventHandles[name]) {\n        return eventHandles[name];\n      }\n      eventHandles[name] = (...args: any) => {\n        const msg: FromRenderMsg = {\n          type: MSG_TYPE,\n          componentId: this.id,\n          method: name,\n          args,\n        };\n        app.postMessage(msg);\n      };\n      (eventHandles as any).handleName = name;\n      return eventHandles[name];\n    };\n\n    render(): React.ReactNode {\n      const element = componentSpec.render.call({\n        nativeComponents,\n        props: this.props,\n        state: this.getInstanceState(),\n        getEventHandle: this.getEventHandle,\n        getComponent: getComponentClass,\n      });\n      return componentPath.renderWithComponentContext(this, element);\n    }\n  }\n\n  const C = Component as any;\n\n  C.displayName = name;\n  componentClassCache[name] = C;\n  return C;\n}\n\nObject.assign(nativeComponents, {\n  Input: (Input as any) || getComponentClass('input'),\n});\n","import componentPath from '../common/componentPath';\nimport React from 'react';\nimport {\n  AppComponent,\n  WorkerRenderComponent,\n  WorkerLike,\n  FromWorkerMsg,\n  FromRenderMsg,\n  MSG_TYPE,\n} from '../common/types';\nimport { getComponentClass } from './getComponentClass';\nimport { noop, safeJsonParse } from '../common/utils';\nimport { log } from '../common/log';\n\nclass App\n  extends React.Component<\n    {\n      worker: WorkerLike;\n      entry: string;\n      batchedUpdates: (fn: () => void) => void;\n    },\n    { inited: boolean }\n  >\n  implements AppComponent\n{\n  componentIndex = 0;\n  componentPath = '1';\n  componentChildIndex = 0;\n  componentChildIndexMap = new Map();\n  newComponentsPathIdMap = {};\n  componentNameDefaultPropsMap = {};\n  newComponentsIdStateMap = {};\n  pendingIdStateMap = {};\n  components: Map<string, WorkerRenderComponent> = new Map();\n  componentSpec = null!;\n\n  constructor(props: any) {\n    super(props);\n    this.props.worker.addEventListener('message', this.onmessage);\n    this.state = {\n      inited: false,\n    };\n  }\n  onmessage = (e: any) => {\n    const msg: FromWorkerMsg = safeJsonParse(e.data);\n    if (msg.type !== MSG_TYPE) {\n      return;\n    }\n    log('from worker', msg);\n    const {\n      newComponentsIdStateMap,\n      newComponentsPathIdMap,\n      pendingIdStateMap,\n      newComponentNameDefaultPropsMap,\n    } = msg;\n    const { components, componentNameDefaultPropsMap } = this;\n    Object.assign(\n      componentNameDefaultPropsMap,\n      newComponentNameDefaultPropsMap,\n    );\n    for (const name of Object.keys(newComponentNameDefaultPropsMap)) {\n      getComponentClass(name).defaultProps =\n        newComponentNameDefaultPropsMap[name];\n    }\n    this.newComponentsIdStateMap = newComponentsIdStateMap;\n    this.newComponentsPathIdMap = newComponentsPathIdMap;\n\n    this.props.batchedUpdates(() => {\n      if (!this.state.inited) {\n        this.setState({\n          inited: true,\n        });\n      }\n      for (const id of Object.keys(pendingIdStateMap)) {\n        const state = pendingIdStateMap[id];\n        const component = components.get(id)!;\n        component.setStateState(state);\n      }\n    });\n  };\n  postMessage(msg: FromRenderMsg) {\n    log('send to worker', msg);\n    this.props.worker.postMessage(JSON.stringify(msg));\n  }\n\n  addComponent(component: WorkerRenderComponent) {\n    this.components.set(component.id, component);\n  }\n  removeComponent(component: WorkerRenderComponent) {\n    this.components.delete(component.id);\n  }\n\n  setStateState = noop;\n\n  componentWillUnmount() {\n    this.props.worker.removeEventListener('message', this.onmessage);\n  }\n\n  render(): React.ReactNode {\n    if (this.state.inited) {\n      const Entry = getComponentClass(this.props.entry);\n      return componentPath.renderWithComponentContext(this, <Entry />);\n    } else {\n      return null;\n    }\n  }\n}\n\ncomponentPath.classWithContext(App);\n\nexport default App;\n","import { registerComponent } from '../../render';\n\nexport default registerComponent('input', {\n  getInitialState() {\n    return {\n      value: this.props.value,\n      seq: 1,\n    };\n  },\n  onChange(e: any) {\n    // do not need send to render\n    this.setState(e, undefined, false);\n    this.props.onChange?.(e.value);\n  },\n  componentDidUpdate(prevProps: any, prevState: any) {\n    if (Number.isNaN(this.props.value) && Number.isNaN(this.state.value)) {\n      return;\n    }\n    if (this.props.value !== this.state.value) {\n      this.setState({\n        ...this.state,\n        value: this.props.value,\n      });\n    }\n  },\n  render() {\n    return null;\n  },\n});\n","import React from 'react';\nimport { getComponentDesc } from '../common/register';\nimport { WorkerRenderComponent } from '../common/types';\nimport { nativeComponents } from './nativeComponent';\nimport componentPath from '../common/componentPath';\nimport ComponentContext, {\n  ComponentContextValue,\n} from '../common/ComponentContext';\nimport { WorkerComponent } from './types';\nimport NativeInput from './nativeComponents/Input';\n\nconst componentClassCache: Record<string, React.ComponentClass> = {};\n\nlet gid = 1;\n\nexport function getComponentClass(\n  name: string,\n  native = false,\n): React.ComponentClass {\n  if (componentClassCache[name]) {\n    return componentClassCache[name];\n  }\n\n  const componentSpec = getComponentDesc(name);\n\n  interface State {\n    __state: any;\n    __self: Component;\n  }\n\n  class Component\n    extends React.Component<any, State>\n    implements WorkerRenderComponent\n  {\n    id: string;\n    componentIndex = 0;\n    componentPath = '';\n    componentChildIndex = 0;\n    componentChildIndexMap = new Map();\n    eventHandles: Record<string, () => void>;\n    componentSpec = componentSpec;\n    publicInstance: WorkerComponent;\n    componentName = name;\n\n    static contextType = ComponentContext;\n\n    static defaultProps = componentSpec.defaultProps;\n\n    constructor(props: any) {\n      super(props);\n      this.id = '';\n      this.publicInstance = Object.create(componentSpec);\n      this.publicInstance.setState = this.setStateState;\n      Object.defineProperty(this.publicInstance, 'props', {\n        get: this.getInstanceProps,\n      });\n      Object.defineProperty(this.publicInstance, 'state', {\n        get: this.getInstanceState,\n      });\n      this.eventHandles = {};\n      this.state = {\n        __self: this,\n        __state: {},\n      };\n      if (componentSpec.getInitialState) {\n        const state = componentSpec.getInitialState.call(this.publicInstance);\n        if (state) {\n          (this.state as State).__state = state;\n        }\n      }\n    }\n\n    shouldComponentUpdate(nextProps: any, nextState: State) {\n      if (componentSpec.shouldComponentUpdate) {\n        return componentSpec.shouldComponentUpdate.call(\n          this.publicInstance,\n          nextProps,\n          nextState.__state,\n          undefined,\n        );\n      }\n      return true;\n    }\n\n    callMethod(method: string, args: any[]): void {\n      const publicInstance: any = this.publicInstance;\n      publicInstance[method](...args);\n    }\n\n    setStateState = (\n      newState: any,\n      callback?: () => void,\n      sendToRender = true,\n    ) => {\n      if (!native) {\n        sendToRender = true;\n      }\n      this.setState(({ __state }) => {\n        let retState: any = {};\n        if (typeof newState === 'function') {\n          retState = newState(__state);\n        } else {\n          retState = newState;\n        }\n        if (sendToRender) {\n          this.getContext().app.setStateState(this, retState);\n        }\n        return {\n          __state: {\n            ...__state,\n            ...retState,\n          },\n        };\n      }, callback);\n    };\n\n    static getDerivedStateFromProps(nextProps: any, { __self }: State) {\n      const instance: Component = __self;\n      componentPath.updateComponentPath(instance);\n      const { app } = instance.context as ComponentContextValue;\n      if (!instance.id) {\n        instance.id = ++gid + '';\n        app.addComponent(instance);\n      }\n      if (instance.componentSpec.getDerivedStateFromProps) {\n        const state = instance.getInstanceState();\n        const newState = instance.componentSpec.getDerivedStateFromProps(\n          nextProps,\n          state,\n        );\n        return {\n          __state: {\n            ...state,\n            ...newState,\n          },\n        };\n      }\n      return {};\n    }\n\n    getContext() {\n      return this.context as ComponentContextValue;\n    }\n\n    componentDidMount() {\n      componentSpec.componentDidMount?.call(this.publicInstance);\n    }\n\n    componentDidUpdate(prevProps: any, prevState: any) {\n      const { publicInstance } = this;\n      componentSpec.componentDidUpdate?.call(\n        publicInstance,\n        prevProps,\n        prevState.__state,\n      );\n    }\n\n    componentWillUnmount() {\n      componentSpec.componentWillUnmount?.call(this.publicInstance);\n      this.getContext().app.removeComponent(this);\n    }\n\n    getInstanceProps = () => {\n      return this.props;\n    };\n    getInstanceState = () => {\n      return this.state.__state;\n    };\n\n    getEventHandle = (name: string) => {\n      const { eventHandles } = this;\n      if (eventHandles[name]) {\n        return eventHandles[name];\n      }\n      const publicInstance = this.publicInstance as any;\n      const handle: any = (...args: any) => {\n        publicInstance[name](...args);\n      };\n      handle.handleName = name;\n      eventHandles[name] = handle;\n      return handle;\n    };\n\n    render(): React.ReactNode {\n      const element = componentSpec.render.call({\n        nativeComponents,\n        props: this.props,\n        state: this.getInstanceState(),\n        getEventHandle: this.getEventHandle,\n        getComponent: getComponentClass,\n      });\n      return componentPath.renderWithComponentContext(this, element);\n    }\n  }\n\n  const C = Component as any;\n\n  C.displayName = name;\n  componentClassCache[name] = C;\n  return C;\n}\n\nObject.assign(nativeComponents, {\n  Input: (NativeInput as any) || getComponentClass('input', true),\n});\n","import componentPath from '../common/componentPath';\nimport React from 'react';\nimport { getComponentDesc } from '../common/register';\nimport {\n  AppComponent,\n  WorkerRenderComponent,\n  WorkerLike,\n  FromWorkerMsg,\n  FromRenderMsg,\n  MSG_TYPE,\n} from '../common/types';\nimport { getComponentClass } from './getComponentClass';\nimport noopRender from './noopRender';\nimport { cleanFuncJson, safeJsonParse } from '../common/utils';\nimport { log } from '../common/log';\n\nclass App\n  extends React.Component<{ worker: WorkerLike; entry: string }>\n  implements AppComponent\n{\n  componentIndex = 0;\n  componentPath = '1';\n  componentChildIndex = 0;\n  componentChildIndexMap = new Map();\n  newComponentsPathIdMap: Record<string, string> = {};\n  newComponentsIdStateMap: Record<string, any> = {};\n  pendingIdStateMap: Record<string, any> = {};\n  newComponentIds: Set<string> = new Set();\n  components: Map<string, WorkerRenderComponent> = new Map();\n  scheduled = false;\n  componentNameDefaultPropsMap: Record<string, string> = {};\n\n  constructor(props: any) {\n    super(props);\n    this.props.worker.addEventListener('message', this.onmessage);\n  }\n  onmessage = (e: { data: string }) => {\n    const msg: FromRenderMsg = safeJsonParse(e.data);\n    if (msg.type !== MSG_TYPE) {\n      return;\n    }\n    log('from render', msg);\n    const { componentId, method, args } = msg;\n    const component = this.components.get(componentId)!;\n    noopRender.batchedUpdates(() => {\n      component.callMethod(method, args);\n    });\n  };\n  postMessage(msg: FromWorkerMsg) {\n    log('send to render', msg);\n    this.props.worker.postMessage(JSON.stringify(msg));\n  }\n\n  afterSendToRender() {\n    this.pendingIdStateMap = {};\n    this.newComponentIds.clear();\n    this.newComponentsPathIdMap = {};\n    this.newComponentsIdStateMap = {};\n  }\n\n  scheduleSendToRender() {\n    if (this.scheduled) {\n      return;\n    }\n    this.scheduled = true;\n    Promise.resolve().then(() => {\n      this.sendToRender();\n      this.afterSendToRender();\n      this.scheduled = false;\n    });\n  }\n\n  componentDidMount() {\n    this.scheduleSendToRender();\n  }\n\n  componentWillUnmount() {\n    this.props.worker.removeEventListener('message', this.onmessage);\n  }\n\n  sendToRender() {\n    const {\n      components,\n      pendingIdStateMap,\n      newComponentsIdStateMap,\n      newComponentsPathIdMap,\n      componentNameDefaultPropsMap,\n    } = this;\n\n    const newComponentNameDefaultPropsMap: Record<string, string> = {};\n\n    for (const id of Object.keys(pendingIdStateMap)) {\n      if (!components.has(id)) {\n        delete pendingIdStateMap[id];\n      }\n    }\n\n    for (const id of Array.from(this.newComponentIds)) {\n      const component = components.get(id)!;\n      const { componentName } = component;\n\n      newComponentsIdStateMap[id] = component.getInstanceState();\n      newComponentsPathIdMap[componentPath.getComponentPath(component)] = id;\n\n      if (!componentNameDefaultPropsMap[componentName]) {\n        componentNameDefaultPropsMap[componentName] =\n          getComponentDesc(componentName).defaultProps || {};\n        newComponentNameDefaultPropsMap[componentName] =\n          componentNameDefaultPropsMap[componentName];\n      }\n    }\n\n    this.postMessage({\n      type: MSG_TYPE,\n      newComponentsIdStateMap: cleanFuncJson(newComponentsIdStateMap),\n      newComponentsPathIdMap,\n      pendingIdStateMap: cleanFuncJson(pendingIdStateMap),\n      newComponentNameDefaultPropsMap: cleanFuncJson(\n        newComponentNameDefaultPropsMap,\n      ),\n    });\n  }\n  setStateState(component: WorkerRenderComponent, state: any) {\n    if (this.newComponentIds.has(component.id)) {\n      return;\n    }\n    const { pendingIdStateMap } = this;\n    const current = pendingIdStateMap[component.id] || {};\n    Object.assign(current, state);\n    pendingIdStateMap[component.id] = current;\n    this.scheduleSendToRender();\n  }\n  addComponent(component: WorkerRenderComponent) {\n    if (!this.components.has(component.id)) {\n      this.newComponentIds.add(component.id);\n    }\n    this.components.set(component.id, component);\n  }\n  removeComponent(component: WorkerRenderComponent) {\n    this.newComponentIds.delete(component.id);\n    this.components.delete(component.id);\n  }\n\n  render(): React.ReactNode {\n    const Entry = getComponentClass(this.props.entry);\n    return componentPath.renderWithComponentContext(this, <Entry />);\n  }\n}\n\ncomponentPath.classWithContext(App);\n\nexport default App;\n","export default {\n  getInitialState() {\n    return {\n      count: 1,\n    };\n  },\n  onChange(value: string) {\n    const n = parseInt(value);\n    if (typeof n === 'number' && !isNaN(n)) {\n      this.setState({\n        count: n,\n      });\n    }\n  },\n  onClick() {\n    this.setState({\n      count: this.state.count + 1,\n    });\n  },\n} as any;\n","export default {\n  defaultProps: {\n    defaultId: 1,\n  },\n  getInitialState() {\n    return {\n      title: 'react-worker-render',\n      now: this.props.defaultId,\n    };\n  },\n  shouldComponentUpdate(nextProps: any, nextState: any) {\n    return nextState.now !== this.state.now;\n  },\n  refresh() {\n    this.setState({\n      now: Date.now(),\n    });\n  },\n} as any;\n","import { ReactWorker } from '../../src/index';\nimport lifecycle from './app/lifecycle';\nimport render from './app/render';\nimport titleLifecycle from './title/lifecycle';\nimport titleRender from './title/render';\n\nconst entry = 'app';\n\nReactWorker.registerComponent(entry, {\n  ...lifecycle,\n  render,\n});\n\nReactWorker.registerComponent('title', {\n  ...titleLifecycle,\n  render: titleRender,\n});\n\nReactWorker.bootstrap({\n  worker: self,\n  entry,\n});\n","export default function render(this: any) {\n  const { Div, Input, Link, A } = this.nativeComponents;\n  const Title = this.getComponent('title');\n  return (\n    <>\n      <Title />\n      <Div>\n        set(number):{' '}\n        <Input\n          onChange={this.getEventHandle('onChange')}\n          value={this.state.count}\n        />\n      </Div>\n      <Div\n        style={{\n          border: '1px solid red',\n          margin: 10,\n          padding: 10,\n          userSelect: 'none',\n        }}\n        onClick={this.getEventHandle('onClick')}\n      >\n        click to increment: {this.state.count}\n      </Div>\n      <Link\n        rel=\"stylesheet\"\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/github-fork-ribbon-css/0.2.3/gh-fork-ribbon.min.css\"\n      />\n      <Div>\n        <A\n          className=\"github-fork-ribbon\"\n          href=\"https://github.com/yiminghe/react-worker-render\"\n          data-ribbon=\"Fork me on GitHub\"\n          title=\"Fork me on GitHub\"\n        >\n          Fork me on GitHub\n        </A>\n      </Div>\n    </>\n  );\n}\n","export default function render(this: any) {\n  const { Div } = this.nativeComponents;\n  return (\n    <Div\n      style={{\n        border: '1px solid red',\n        padding: 10,\n        margin: 10,\n        userSelect: 'none',\n      }}\n      onClick={this.getEventHandle('refresh')}\n    >\n      {this.state.title}@{this.state.now}\n    </Div>\n  );\n}\n","import { registerComponent } from '../common/register';\nimport noopRender from './noopRender';\nimport React from 'react';\nimport App from './App';\nimport { WorkerLike } from '../common/types';\n\nexport { registerComponent };\n\nexport function bootstrap({\n  worker,\n  entry,\n}: {\n  worker: WorkerLike;\n  entry: string;\n}) {\n  noopRender.create(<App worker={worker} entry={entry} />);\n}\n\nexport { registerNativeComponent } from './nativeComponent';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [741], function() { return __webpack_require__(386); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"50109eb7\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/react-worker-render/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t386: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkexample\"] = self[\"webpackChunkexample\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(741).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["componentMaps","registerComponent","name","desc","getComponentDesc","noop","Render","HostConfig","supportsMutation","appendInitialChild","createInstance","createTextInstance","finalizeInitialChildren","getRootHostContext","getChildHostContext","now","Date","getPublicInstance","prepareForCommit","prepareUpdate","resetAfterCommit","shouldSetTextContent","appendChild","appendChildToContainer","commitTextUpdate","commitMount","commitUpdate","insertBefore","insertInContainerBefore","removeChild","removeChildFromContainer","resetTextContent","clearContainer","id","getRender","Reconciler","element","container","createContainer","entry","update","newElement","updateContainer","unmount","batchedUpdates","React","parent","app","getComponentContext","instance","componentContext","context","componentPath","classWithContext","ComponentClass","contextType","ComponentContext","updateComponentPath","componentChildIndexMap","has","componentIndex","get","componentChildIndex","set","getComponentPath","renderWithComponentContext","clear","value","MSG_TYPE","nativeComponents","getNativeComponentClass","CC","this","props","children","C","displayName","Object","assign","Div","Link","A","onClick","Tag","Input","onChange","e","current","target","seq","state","setState","nextProps","prevState","defaultProps","render","getEventHandle","cleanFuncJson","json","ret","keys","k","match","handleName","safeJsonParse","str","JSON","parse","componentClassCache","getComponentClass","componentSpec","Component","Map","eventHandles","componentName","publicInstance","shouldComponentUpdate","PureRender","getInstanceProps","callMethod","args","msg","type","componentId","method","postMessage","__self","__state","create","defineProperty","getInstanceState","newState","componentDidMount","call","prevProps","componentDidUpdate","componentWillUnmount","getContext","removeComponent","getComponent","_","path","newComponentsPathIdMap","Error","addComponent","newComponentsIdStateMap","App","componentNameDefaultPropsMap","pendingIdStateMap","components","onmessage","data","newComponentNameDefaultPropsMap","inited","setStateState","worker","addEventListener","stringify","component","delete","removeEventListener","Entry","getInitialState","undefined","Number","isNaN","gid","native","callback","sendToRender","retState","handle","nextState","getDerivedStateFromProps","NativeInput","newComponentIds","Set","scheduled","noopRender","Promise","resolve","then","afterSendToRender","scheduleSendToRender","Array","from","add","count","n","parseInt","defaultId","title","refresh","ReactWorker","lifecycle","Title","style","border","margin","padding","userSelect","rel","href","className","titleLifecycle","self","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","every","key","splice","r","getter","__esModule","d","a","definition","o","enumerable","f","chunkId","all","reduce","promises","u","miniCssF","obj","prop","prototype","hasOwnProperty","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","moreModules","runtime","pop","next"],"sourceRoot":""}